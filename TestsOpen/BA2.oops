| Keine Interessante Ausgabe. 
| Relevant ist der Syntaxbaum -c
CLASS Main IS
    x,y,z: Integer;
    d,e,f: Boolean;
    METHOD main IS
    BEGIN
        x :=    2;     | Initial
        y :=    3;     | Initial
        e :=    FALSE; | Initial
        f :=    TRUE;  | Initial
	| ADD und SUB
        z :=  - -x;  | x
        z := 0 + x;  | x
        z := x + 0;  | x
        z := x + -y; | x-y
        z := 0 - x;  | -x
        z := x - 0;  | x
        z := x - -y; | x+y

	| TIMES
        z := 0 * x;   | 0
        z := x * 0;   | 0
        z := 1 * x;   | 1
        z := x * 1;   | 1
        z := 4 * -x;  | -4*x
        z := -x * 4;  | -4*x
        z := x * -y;  | -(x*y) >>> NO -x*y
        z := -x * y;  | -(x*y) >>> NO -x*y
        z := -x * -y; | x*y  >>> NO -(-x)*y

	| DIV
	z := 4 / 1;    | 4
	z := x / 4;    | x/4
        z := 0 / x;   | 0
        z := x / 1;   | x
        z := -x / 4;  | (x/-4)
        z := -x / y;  | -(x/y)
        z :=  x/ -y;  | -(x/y)
        z := -x / -y; | x*y

	IF FALSE THEN
	THROW 0;
	ELSE
	| Ketten
	z:= z+4+x-3+2-y; | 3+z+x-y
	z:= z*4*x*3*2*y; | 24*z*x*y
	z:= z/4/x/3/2/y; | z/24/x/y
	END IF

	| Boolean
	IF TRUE THEN
	d := NOT NOT e;    | e
	d := FALSE AND e;  | FALSE
	d := e AND FALSE ; | FALSE
	d := TRUE AND e;   | e
	d := e AND TRUE ;  | e
	d := FALSE OR e;   | e
	d := e OR FALSE ;  | e
	d := TRUE OR e;    | TRUE
	d := e OR TRUE ;   | TRUE
	ELSE
	THROW 1;
	END IF
    END METHOD
END CLASS
